name: Deploy to Render

on:
  pull_request:
    branches: ["main"]
    types: [opened, reopened, synchronize]
  push:
    branches: ["main"]
permissions:
  contents: read
  actions: read
  checks: write
  deployments: write
jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production

      - name: deploy to render
        id: render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          api-key: ${{ secrets.RENDER_API_KEY }}
          service-id: ${{ secrets.RENDER_SERVICE_ID }}

      - name: inspect render deployment outputs
        run: echo "${{ toJson(steps.render.outputs) }}"

      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ steps.render.outputs.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.render.outputs.service-url }}
